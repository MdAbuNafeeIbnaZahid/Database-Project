CREATE OR REPLACE PROCEDURE GET_TEACHER_INFO_FROM_USERNAME(T_USERNAME IN VARCHAR2, T_first_name OUT VARCHAR2,
 T_last_NAME OUT VARCHAR2, T_ADDRESS OUT VARCHAR2, T_PHONE_NUMBER OUT VARCHAR2, T_EMAIL_ADDRESS OUT VARCHAR2, 
T_DEPARTMENT_NAME OUT VARCHAR2, T_TEACHER_RANK OUT VARCHAR2 )
IS
BEGIN
	SELECT first_name, last_name, address, phone_number, email_address, Get_Dept_Name_From_Dept_ID(DEPARTMENT_ID )
 DEPT_NAME , TEACHER_RANK
INTO
T_FIRST_NAME, T_LAST_NAME, T_ADDRESS, T_PHONE_NUMBER, T_EMAIL_ADDRESS, T_DEPARTMENT_NAME, T_TEACHER_RANK
FROM TEACHER  

 WHERE USERNAME = T_USERNAME ;
END;
/


DECLARE
	FIRST_NAME VARCHAR2(100) ;
	LAST_NAME VARCHAR2(100);
	ADDRESS VARCHAR2(100);
	PHONE_NUMBER VARCHAR2(100);
	EMAIL_ADDRESS VARCHAR2(100);
	DEPARTMENT_NAME VARCHAR2(100);
	TEACHER_RANK VARCHAR2(100);
BEGIN
	GET_TEACHER_INFO_FROM_USERNAME('user1', first_name, last_NAME, ADDRESS, PHONE_NUMBER, EMAIL_ADDRESS, DEPARTMENT_NAME, 
TEACHER_RANK);
	DBMS_OUTPUT.PUT_LINE(FIRST_NAME || ' ' || LAST_NAME || DEPARTMENT_NAME) ;
END ;


CREATE OR REPLACE PROCEDURE EDIT_TEACHER_INFO_UN_GIVEN(T_USERNAME IN VARCHAR2, T_ADDRESS IN VARCHAR2, 
T_FIRST_NAME IN VARCHAR2, T_LAST_NAME IN VARCHAR2, T_PHONE_NUMBER IN VARCHAR2, T_EMAIL_ADDRESS IN VARCHAR2, IF_SUCCESS OUT NUMBER)
IS
BEGIN
	UPDATE TEACHER
	SET ADDRESS = T_ADDRESS, FIRST_NAME = T_FIRST_NAME, LAST_NAME = T_LAST_NAME, PHONE_NUMBER = T_PHONE_NUMBER, 
	EMAIL_ADDRESS = T_EMAIL_ADDRESS
	WHERE USERNAME = T_USERNAME ;
	IF_SUCCESS := 1;
EXCEPTION
	WHEN OTHERS THEN
		IF_SUCCESS := 0;
END;
/


CREATE OR REPLACE 
PROCEDURE Get_DEPT_ID_From_TEACHER_UN(T_UN IN VARCHAR2, D_ID OUT NUMBER ) IS
	IF_SUCCESS NUMBER;
BEGIN
	SELECT DEPARTMENT_ID INTO D_ID
	FROM TEACHER
	WHERE USERNAME = T_UN;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			D_ID := -1;
		WHEN TOO_MANY_ROWS THEN
			D_ID := -2;
		WHEN DUP_VAL_ON_INDEX THEN
			D_ID := -3;
END;
/




CREATE OR REPLACE 
PROCEDURE SET_DEPARTMENT_HEAD(D_NAME IN VARCHAR2,  T_UN IN VARCHAR2, IF_SUCCESS OUT NUMBER ) IS
	DEPT_ID_OF_T NUMBER;
BEGIN
	Get_DEPT_ID_From_TEACHER_UN(T_UN, DEPT_ID_OF_T);
	IF GET_HEAD_ID_FROM_DEPT_NAME(D_NAME) = Get_T_ID_From_TEACHER_UN(T_UN) THEN
		IF_SUCCESS := 0;
	ELSIF DEPT_ID_OF_T = GET_DEPT_ID_FROM_DEPT_NAME(D_NAME) THEN
		UPDATE DEPT
		SET HEAD_ID = Get_T_ID_From_TEACHER_UN(T_UN)
		WHERE DEPARTMENT_NAME = D_NAME;
		IF_SUCCESS := 1;
	ELSE
		IF_SUCCESS := 0;
	END IF;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF_SUCCESS := -1;
	WHEN TOO_MANY_ROWS THEN
		IF_SUCCESS := -2;
	WHEN DUP_VAL_ON_INDEX THEN
		IF_SUCCESS := -3;
	WHEN OTHERS THEN
		IF_SUCCESS := -4;
END;
/




CREATE OR REPLACE 
PROCEDURE ADD_NEW_COURSE(COURSE_NUMBER IN NUMBER,  COURSE_NAME IN VARCHAR2, CREDIT_HOURS IN NUMBER, 
DEPARTMENT_NAME IN VARCHAR2, IF_SUCCESS OUT NUMBER ) IS
	DEPT_ID_OF_T NUMBER;
BEGIN
	IF_SUCCESS := 0;
	INSERT INTO COURSE VALUES(NUMBER_ID_SEQ.NEXTVAL, COURSE_NUMBER, COURSE_NAME, CREDIT_HOURS, 
GET_DEPT_ID_FROM_DEPT_NAME(DEPARTMENT_NAME) );
	IF_SUCCESS := 1;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF_SUCCESS := -1;
	WHEN TOO_MANY_ROWS THEN
		IF_SUCCESS := -2;
	WHEN DUP_VAL_ON_INDEX THEN
		IF_SUCCESS := -3;
	WHEN OTHERS THEN
		IF_SUCCESS := -4;
END;
/




CREATE OR REPLACE 
PROCEDURE ADD_NEW_CLASS(MONTH_OF_CLASS IN VARCHAR2,  YEAR_OF_CLASS IN NUMBER, DEPARTMENT_NAME IN VARCHAR2, 
COURSE_NUMBER IN NUMBER, IF_SUCCESS OUT NUMBER ) IS
	CRS_ID NUMBER;
BEGIN
	IF_SUCCESS := 0;
	CRS_ID := Get_CRS_ID_Frm_DPT_NAM_CRS_NUM(DEPARTMENT_NAME, 207);
	INSERT INTO CLASS_OF_COURSE VALUES(NUMBER_ID_SEQ.NEXTVAL, MONTH_OF_CLASS, YEAR_OF_CLASS, CRS_ID  );
	IF_SUCCESS := 1;
EXCEPTION
	WHEN NO_DATA_FOUND THEN
		IF_SUCCESS := -1;
	WHEN TOO_MANY_ROWS THEN
		IF_SUCCESS := -2;
	WHEN DUP_VAL_ON_INDEX THEN
		IF_SUCCESS := -3;
	WHEN OTHERS THEN
		IF_SUCCESS := -4;
END;
/